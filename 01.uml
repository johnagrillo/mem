@startuml
autonumber

participant main
participant GetGif
participant "char* buffer <color:orange>@0x601000</color>" as Buffer
participant GifImage
participant "Buffer" as Buffer
participant "<color:green>@0x5678 </color>" as Temp
participant "<color:blue>0x1234</color>" as Gif

activate main

create Gif
activate Gif
main -> Gif : <color:blue>mainGif = </color>


main -> GetGif : GetGif(<color:blue>&mainGif</color>)
activate GetGif


create Temp
GetGif -> Temp : <color:green>tempGif = </color>

GetGif -> GifImage : GifImage::GifImage(<color:green>&tempGif</color>, "GIF89a", 6)
activate GifImage

GifImage -> GifImage : char[6] at <color:orange>0x601000</color>
create Buffer

GifImage -> Buffer : memcpy("GIF89a", 6)

note right of GifImage
Allocated by temp  
<color:orange>0x601000</color> = "GIF89a"
end note
deactivate GifImage

GetGif -> GifImage : GifImage::GifImage(const GifImage&) <color:blue>@0x1234</color>
activate GifImage

GifImage -> Buffer : buffer = temp.buffer (shallow copy)  
GifImage -> GifImage : size = 6

note right of GifImage
  Shallow copy: shares buffer <color:orange>@0x601000</color>
end note

deactivate GifImage

GetGif -> GifImage : ~GifImage() <color:green>@0x5678</color>
activate GifImage
GifImage -> Buffer : delete[] buffer <color:orange>@0x601000</color>
destroy Buffer

destroy Temp
deactivate GifImage

note right of GifImage
X️ buffer now dangling (<color:orange>0x601000</color> freed)
end note

main <-- GetGif : return
deactivate GetGif

main -> main : access gif.size = 6
main -> main : access gif.buffer → <color:orange>0x601000</color> (dangling)

main -> GifImage : ~GifImage() <color:blue>@0x1234</color>
GifImage -> Buffer : delete[] buffer <color:orange>@0x601000</color> ❌

note right of GifImage
X Double delete → undefined behavior!
end note
destroy Gif

@enduml

